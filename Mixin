#When a module is used to mix additional behavior and information into a class, it's called a mixin. 
#Mixins allow us to customize a class without having to rewrite code!

#how define the jump method in the Action module, then mix it into the Rabbit and Cricket classes


module Action
  def jump
    @distance = rand(4) + 2
    puts "I jumped forward #{@distance} feet!"
  end
end

class Rabbit
  include Action
  attr_reader :name
  def initialize(name)
    @name = name
  end
end

class Cricket
  include Action
  attr_reader :name
  def initialize(name)
    @name = name
  end
end

peter = Rabbit.new("Peter")
jiminy = Cricket.new("Jiminy")

peter.jump
jiminy.jump


#second example

module MartialArts
  def swordsman
    puts "I'm a swordsman."
  end  
end

class Ninja
  include MartialArts
  def initialize(clan)
    @clan = clan
  end
end

class Samurai
  include MartialArts
  def initialize(shogun)
    @shogun = shogun
  end
end

peter = Ninja.new("Peter")
jiminy = Samurai.new("Jiminy")

peter.swordsman
jiminy.swordsman

#mixed together the behaviors of a class and a module!
